#!/bin/sh
#
mydir="$(cd "$(dirname $0)" && pwd)"
export PATH=$PATH:$mydir

payload=$mydir/files/extloader.sh
init=/sbin/init
plash="$mydir/data/plash -F$mydir/data/font.ttf -f$mydir/data/orange.png"

auto=false

if [ x"$1" = x"auto" ] ; then
  auto=true
  shift
fi

if ! $auto ; then
  msg=$($plash -d0 -m"INSTALL... press A to continue")
  [ x"$msg" != x"key_lctrl confirm btn_a" ] && exit
fi

ckdev() {
  local root="$1" name="$2" type="$3" major="$4" minor="$5"
  [ -e $root/dev/$name ] && return 0
  mknod $root/dev/$name $type $major $minor
  return $?
}

safecp() {
  local payload="$1" init="$2"

  if type rsync ; then
    # We prefer to use rsync
    rsync -avz "$payload" $init && chmod 755 $init && return 0
    return 1
  fi
  # Fallback to cp if rsync not found...
  if [ -d "$payload" ] ; then
    [ -e "$init" ] && rm -rf "$init"
  fi
  cp -a "$payload" $init && chmod 755 $init && return 0
  return 1
}

(
  exec 2>&1
  result="FAILED"
  set -x

  if mount -o remount,rw / ; then
    # We remove this for clarity... ignored by the system...
    [ -L /linuxrc ] && mv /linuxrc /linuxrc.old
    [ -x /linuxrc ] && rm -f /linuxrc

    if (
      [ ! -L $init ] && exit 0
      mv $init $init.old
      exit $?
    ) ; then
      failed=""
      # Make sure the rootfs has the minimum device nodes...
      if mkdir /tmp/bindme.$$ ; then
	if mount -o bind / /tmp/bindme.$$ ; then	
	  for dev in "null c 1 3" "kmsg c 1 11" "event0 c 13 64" \
			"fb0 c 29 0" "mem c 1 1" \
			"tty c 5 0" "tty0 c 4 0" "tty1 c 4 1" "tty2 c 4 2" "tty3 c 4 3" "tty3 c 4 4" \
			"loop0 b 7 0" "loop0 b 7 1" "loop0 b 7 2" "loop0 b 7 3" "loop0 b 7 4" \
			"mmcblk0p4 b 179 4" "mmcblk1 b 179 8" "mmcblk1p1 b 179 9"
	  do
	    ckdev /tmp/bindme.$$ $dev || failed="$failed $dev"
	  done
	  umount /tmp/bindme.$$
        fi
        rmdir /tmp/bindme.$$
      fi
      if safecp "$mydir/data/" "/usr/share/plash" ; then
	chmod 755 /usr/share/plash/plash || :
	chmod 755 /usr/share/plash/sdlmenu || :
      else
	failed="$failed plash"
      fi
      
      if safecp "$payload" $init ; then
	if [ -n "$failed" ] ; then
	  result="PARTIAL, Errors$failed"
	else
	  result="SUCCESS"
	fi
      else
	if [ -L $init.old ] ; then
	  rm -f $init
	  mv $init.old $init
	fi
      fi
    fi
    mount -o remount,ro /
  fi
  set +x
  echo "$result"
) | tee $mydir/instlog.txt | $plash -d$($auto && echo 100 || echo 0) -i

